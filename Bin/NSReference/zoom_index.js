dictwords = ["alias 0 109 252 1 26 56 4 18 40 6 10 8",
	"are 0 10 64 5 10 1 7 10 4",
	"custom 0 10 64",
	"variable 0 10 64",
	"which 0 10 32 7 10 8",
	"can 0 10 32 1 26 56 4 18 40 6 10 8 7 10 8",
	"use 0 10 32",
	"shortcuts 0 10 32",
	"point 0 27 32 3 26 16 4 47 56",
	"declare 0 128 60 1 26 52 4 18 20 6 10 4",
	"name 0 40 56 1 18 8",
	"examples 0 54 60 1 26 56 3 33 52 4 18 20 6 10 4",
	"auto 0 18 48 3 60 60 4 26 28",
	"reversed 0 18 48 3 99 60 4 10 16",
	"origin 0 10 32 4 18 16",
	"1000 0 10 32 3 18 20 4 10 4",
	"1500 0 10 32 3 10 8 4 18 4",
	"center 0 10 32 4 18 4",
	"rectangle 0 27 32 3 26 12",
	"500 0 18 16 3 18 4",
	"startzone 0 10 16",
	"800 0 10 16",
	"1300 0 10 16",
	"200 0 18 16 3 18 12",
	"centerzone 0 10 16",
	"sensor 0 34 16 6 79 60",
	"color 0 10 16 6 10 4",
	"leftsensor 0 10 16",
	"microswitch 0 10 16 6 18 6",
	"middleswitch 0 10 16",
	"parameter 0 34 8",
	"robot 0 18 8 4 18 48 7 10 8",
	"maxspeed 0 10 8",
	"action 0 34 8 1 48 32",
	"actuator 0 10 8 1 12 32",
	"closeclaws 0 10 4",
	"ax-12 0 20 4 1 22 48",
	"ax12 0 10 4 1 78 60",
	"leftax12 0 10 4",
	"string 0 20 4",
	"leftarm 0 10 4 1 18 12",
	"arm 0 10 4",
	"reference 0 8 128 1 8 128 2 8 128 3 8 128 4 8 128 5 10 16 6 8 128 7 8 128",
	"alias.htm 0 6 64",
	"generic 1 12 64",
	"make 1 54 44",
	"param 1 10 32",
	"estimated_time 1 10 32",
	"note 1 26 56 4 10 32 6 10 8",
	"used 1 26 56 4 18 40 6 10 8",
	"define 1 26 56 4 18 40 6 10 8",
	"500ms 1 10 32 3 10 4",
	"takepawn 1 40 36",
	"single 1 12 32",
	"move 1 40 48",
	"ax12_id 1 10 16",
	"angle 1 10 16 3 47 48",
	"speed 1 33 24 4 33 14",
	"value 1 26 24 3 33 36 4 10 8",
	"180deg 1 10 16",
	"220deg 1 10 16",
	"mainax12 1 18 16",
	"30deg 1 10 16",
	"movements 1 12 16 4 14 192",
	"movement 1 54 12",
	"group 1 40 12",
	"async 1 18 12",
	"and 1 10 8 5 10 2",
	"rightarm 1 10 4",
	"actuators 1 14 192",
	"ax12.htm 1 6 64",
	"donec 2 26 50",
	"eros 2 18 36",
	"faucibus 2 18 48",
	"lorem 2 26 48",
	"lobortis 2 10 32",
	"sodales 2 18 32",
	"nam 2 10 32",
	"vitae 2 18 48",
	"lectus 2 26 36",
	"tincidunt 2 18 36",
	"ornare 2 10 32",
	"aliquam 2 40 45",
	"suscipit 2 26 50",
	"velit 2 18 32",
	"nullam 2 18 33",
	"leo 2 10 32",
	"erat 2 33 60",
	"iaculis 2 18 48",
	"vehicula 2 10 32",
	"dignissim 2 18 36",
	"vel 2 18 36",
	"rhoncus 2 10 32",
	"nulla 2 10 32",
	"facilisi 2 10 32",
	"fusce 2 18 34",
	"tortor 2 18 34",
	"mollis 2 18 20",
	"sed 2 47 25",
	"scelerisque 2 18 17",
	"eget 2 26 25",
	"dui 2 10 16",
	"quisque 2 18 20",
	"nisi 2 40 28",
	"etiam 2 10 16",
	"placerat 2 18 20",
	"feugiat 2 18 24",
	"pellentesque 2 10 16",
	"orci 2 10 16",
	"odio 2 18 17",
	"porta 2 10 16",
	"pretium 2 10 16",
	"cras 2 10 16",
	"quis 2 18 17",
	"tellus 2 18 24",
	"pede 2 10 16",
	"auctor 2 10 16",
	"venenatis 2 10 8",
	"volutpat 2 26 12",
	"congue 2 10 8",
	"praesent 2 10 8",
	"nunc 2 26 12",
	"non 2 18 12",
	"eleifend 2 26 13",
	"cursus 2 10 8",
	"massa 2 26 10",
	"mattis 2 10 8",
	"elementum 2 10 8",
	"luctus 2 18 8",
	"lacus 2 10 8",
	"malesuada 2 18 12",
	"ipsum 2 10 8",
	"morbi 2 10 8",
	"gravida 2 10 4",
	"fermentum 2 18 6",
	"neque 2 10 4",
	"nec 2 18 4",
	"quam 2 10 4",
	"nibh 2 18 5",
	"sagittis 2 10 4",
	"duis 2 10 4",
	"ante 2 18 5",
	"proin 2 10 4",
	"risus 2 10 4",
	"pharetra 2 10 4",
	"sit 2 10 2",
	"amet 2 10 2",
	"sapien 2 18 3",
	"egestas 2 18 2",
	"curabitur 2 18 2",
	"ullamcorper 2 10 2",
	"cum 2 10 2",
	"sociis 2 10 2",
	"natoque 2 10 2",
	"penatibus 2 10 2",
	"magnis 2 10 2",
	"dis 2 10 2",
	"parturient 2 10 2",
	"montes 2 10 2",
	"nascetur 2 10 2",
	"ridiculus 2 10 2",
	"mus 2 10 2",
	"ligula 2 10 2",
	"consectetuer 2 10 1",
	"turpis 2 10 1",
	"nisl 2 10 1",
	"semper 2 10 1",
	"rutrum 2 10 1",
	"tempor 2 10 1",
	"basic 2 14 192 3 14 192 7 12 4",
	"actions 2 14 192 7 10 8",
	"basic_actions.htm 2 6 64",
	"angles 3 12 32",
	"fixed 3 26 56",
	"deg 3 26 32",
	"rad 3 26 32",
	"45deg 3 10 32",
	"1.5rad 3 10 32",
	"72deg 3 10 16",
	"points 3 12 16",
	"250 3 10 8",
	"rectangles 3 12 8",
	"rect 3 33 12",
	"width 3 26 12",
	"height 3 26 12",
	"revsed 3 10 4",
	"300 3 18 4 4 10 16",
	"time 3 12 4",
	"types 3 14 192",
	"basic_types.htm 3 6 64",
	"teleport 4 41 48",
	"the 4 18 48 7 10 8",
	"450 4 10 16",
	"90deg 4 10 16",
	"send 4 10 16 7 10 8",
	"direction 4 18 12",
	"forward 4 18 12",
	"backward 4 18 12",
	"notes 4 10 8",
	"default 4 18 12",
	"100 4 10 8",
	"1800 4 18 4",
	"2300 4 10 4",
	"movements.htm 4 6 64",
	"neobot 5 10 16 7 10 16",
	"script 5 10 16 7 10 16",
	"contents 5 10 8",
	"index 5 10 8",
	"search 5 18 6",
	"enter 5 10 4",
	"one 5 10 4",
	"more 5 10 4",
	"keywords 5 10 2",
	"wildcards 5 10 1",
	"supported 5 10 1",
	"neobotscriptreference_ftsearch.htm 5 6 64",
	"activation 6 12 32",
	"activate 6 18 48",
	"enable 6 40 46",
	"type 6 40 24",
	"deactivate 6 10 16",
	"disable 6 33 30",
	"all 6 40 26",
	"sensors 6 21 208",
	"sharp 6 10 4",
	"middlesharp 6 18 4",
	"colorsensor 6 10 2",
	"sensors.htm 6 6 64",
	"interpreted 7 10 16",
	"language 7 10 8",
	"generate 7 10 8",
	"that 7 10 8",
	"syntax 7 12 4",
	"statements 7 10 4",
	"separated 7 10 4",
	"carriage 7 10 4",
	"return 7 10 2",
	"commented 7 10 2",
	"lines 7 10 2",
	"starts 7 10 2",
	"introduction 7 14 192",
	"syntax.htm 7 6 64"];
skipwords = ["and,or,the,it,is,an,on,we,us,to,of,"];
var STR_FORM_SEARCHFOR = "Search for:";
var STR_FORM_SUBMIT_BUTTON = "Submit";
var STR_FORM_RESULTS_PER_PAGE = "Results per page:";
var STR_FORM_MATCH = "Match:";
var STR_FORM_ANY_SEARCH_WORDS = "any search words";
var STR_FORM_ALL_SEARCH_WORDS = "all search words";
var STR_NO_QUERY = "No search query entered.";
var STR_RESULTS_FOR = "Search results for:";
var STR_NO_RESULTS = "No results";
var STR_RESULT = "result";
var STR_RESULTS = "results";
var STR_PHRASE_CONTAINS_COMMON_WORDS = "Your search query contained too many common words to return the entire set of results available. Please try again with a more specific query for better results.";
var STR_SKIPPED_FOLLOWING_WORDS = "The following word(s) are in the skip word list and have been omitted from your search:";
var STR_SKIPPED_PHRASE = "Note that you can not search for exact phrases beginning with a skipped word";
var STR_SUMMARY_NO_RESULTS_FOUND = "No results found.";
var STR_SUMMARY_FOUND_CONTAINING_ALL_TERMS = "found containing all search terms.";
var STR_SUMMARY_FOUND_CONTAINING_SOME_TERMS = "found containing some search terms.";
var STR_SUMMARY_FOUND = "found.";
var STR_PAGES_OF_RESULTS = "pages of results.";
var STR_POSSIBLY_GET_MORE_RESULTS = "You can possibly get more results searching for";
var STR_ANY_OF_TERMS = "any of the terms";
var STR_DIDYOUMEAN = "Did you mean:";
var STR_SORTEDBY_RELEVANCE = "Sorted by relevance";
var STR_SORTBY_RELEVANCE = "Sort by relevance";
var STR_SORTBY_DATE = "Sort by date";
var STR_SORTEDBY_DATE = "Sorted by date";
var STR_RESULT_TERMS_MATCHED = "Terms matched:";
var STR_RESULT_SCORE = "Score:";
var STR_RESULT_URL = "URL:";
var STR_RESULT_PAGES = "Result Pages:";
var STR_RESULT_PAGES_PREVIOUS = "Previous";
var STR_RESULT_PAGES_NEXT = "Next";
var STR_FORM_CATEGORY = "Category:";
var STR_FORM_CATEGORY_ALL = "All";
var STR_RESULTS_IN_ALL_CATEGORIES = "in all categories";
var STR_RESULTS_IN_CATEGORY = "in category";
var STR_POWEREDBY = "Search powered by";
var STR_MORETHAN = "More than";
var STR_ALL_CATS = "all categories";
var STR_CAT_SUMMARY = "Refine your search by category:";
var STR_OR = "or";
var STR_RECOMMENDED = "Recommended links";
var STR_SEARCH_TOOK = "Search took";
var STR_SECONDS = "seconds";
var STR_MAX_RESULTS = "You have requested more results than served per query. Please try again with a more precise query.";
